{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\OneDrive - Groupe ESAIP\\\\Bureau\\\\React\\\\01-starting-project_FirstPracticeProject\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './assets/investment-calculator-logo.png';\nimport UserInputs from \"./components/userImport/UserInputs\";\nimport UserOutput from \"./components/useroutputs/UserOutput\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //arrivé des données:\n  const [tabData, setTabData] = useState([]);\n  function saveTabData(entry) {\n    setTabData(prevData => [...prevData, entry]);\n    console.log(tabData);\n  }\n\n  //sortie des données:\n\n  const [test, setTest] = useState(0);\n  const calculateHandler = userInput => {\n    const yearlyData = [];\n    let currentSavings = +userInput.current;\n    const yearlyContribution = +userInput.yearly;\n    const expectedReturn = +userInput.expected / 100;\n    const duration = +userInput.investment;\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n    console.log(yearlyData);\n    setDataFinal(yearlyData);\n  };\n  const [finalData, setFinalData] = useState({\n    year: \"\",\n    totalSave: \"\",\n    interest: \"\",\n    totalInt: \"\",\n    invested: \"\"\n  });\n  function setDataFinal(entry) {\n    setFinalData(prevData => [...prevData, entry]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Investment Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserInputs, {\n      onCalculateHandler: calculateHandler,\n      onSaveData: saveTabData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserOutput, {\n      data: tabData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"DGGnGPIkcykpXnQVoKSj+IgLtco=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","UserInputs","UserOutput","useState","jsxDEV","_jsxDEV","App","_s","tabData","setTabData","saveTabData","entry","prevData","console","log","test","setTest","calculateHandler","userInput","yearlyData","currentSavings","current","yearlyContribution","yearly","expectedReturn","expected","duration","investment","i","yearlyInterest","push","year","savingsEndOfYear","setDataFinal","finalData","setFinalData","totalSave","interest","totalInt","invested","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onCalculateHandler","onSaveData","data","_c","$RefreshReg$"],"sources":["C:/Users/Utilisateur/OneDrive - Groupe ESAIP/Bureau/React/01-starting-project_FirstPracticeProject/01-starting-project/src/App.js"],"sourcesContent":["import logo from './assets/investment-calculator-logo.png';\nimport UserInputs from \"./components/userImport/UserInputs\";\n\nimport UserOutput from \"./components/useroutputs/UserOutput\";\nimport {useState} from \"react\";\n\nfunction App() {\n//arrivé des données:\n    const [tabData, setTabData] = useState([]);\n\n\n    function saveTabData(entry) {\n        setTabData((prevData) => [...prevData, entry]);\n        console.log(tabData);\n    }\n\n\n    //sortie des données:\n\n    const [test, setTest] = useState(0);\n\n\n    const calculateHandler = (userInput) => {\n\n\n        const yearlyData = [];\n\n\n        let currentSavings = +userInput.current;\n        const yearlyContribution = +userInput.yearly;\n        const expectedReturn = +userInput.expected / 100;\n        const duration = +userInput.investment;\n\n\n        // The below code calculates yearly results (total savings, interest etc)\n        for (let i = 0; i < duration; i++) {\n            const yearlyInterest = currentSavings * expectedReturn;\n            currentSavings += yearlyInterest + yearlyContribution;\n            yearlyData.push({\n                year: i + 1,\n                yearlyInterest: yearlyInterest,\n                savingsEndOfYear: currentSavings,\n                yearlyContribution: yearlyContribution,\n            });\n        }\n        console.log(yearlyData)\n        setDataFinal(yearlyData)\n    };\n\n    const [finalData, setFinalData] = useState({\n        year: \"\",\n        totalSave: \"\",\n        interest: \"\",\n        totalInt: \"\",\n        invested: \"\"\n    })\n\n    function setDataFinal(entry) {\n        setFinalData((prevData) => [...prevData, entry]);\n    }\n\n    return (\n        <div>\n            <header className=\"header\">\n                <img src={logo} alt=\"logo\"/>\n                <h1>Investment Calculator</h1>\n            </header>\n            <UserInputs onCalculateHandler={calculateHandler} onSaveData={saveTabData}></UserInputs>\n\n\n            <UserOutput data={tabData}></UserOutput>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}